/***************************************************************/
/*                                                             */
/*      PROJECT NAME :  dcmotor                                */
/*      FILE         :  dcmotor.c                              */
/*      DESCRIPTION  :  Main Program                           */
/*      CPU SERIES   :  RX600                                  */
/*      CPU TYPE     :  RX63N                                  */
/*                                                             */
/*      This file is generated by e2 studio.                   */
/*                                                             */
/***************************************************************/                              
                                                                           
                                                                           
                                                                           
                                                                          
/***********************************************************************/
/*                                                                     */
/*  FILE        :Main.c or Main.cpp                                    */
/*  DATE        :Tue, Oct 31, 2006                                     */
/*  DESCRIPTION :Main Program                                          */
/*  CPU TYPE    :                                                      */
/*                                                                     */
/*  NOTE:THIS IS A TYPICAL EXAMPLE.                                    */
/*                                                                     */
/***********************************************************************/
//#include "typedefine.h"
#ifdef __cplusplus
//#include <ios>                        // Remove the comment when you use ios
//_SINT ios_base::Init::init_cnt;       // Remove the comment when you use ios
#endif

#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "iodefine.h"
#include "R_PG_dcmotor.h"


void main(void);
#ifdef __cplusplus
extern "C" {
void abort(void);
}
#endif

//　Interval Timer
unsigned int it_cnt;
uint8_t it_1000ms_flag;
uint8_t it_100ms_flag;

// IO STATUS
uint8_t led0_state;
uint8_t led1_state;
uint8_t led2_state;
uint8_t xbee_reset;

// UART
uint8_t buf[64];

// Encoder
uint16_t cnt_val;
int16_t over_val;
int32_t encode_val;

// DC MOTOR PWM
#define MAX_COUNT 59999
#define END_COUNT 59999
#define STP_COUNT 0
#define MAX_SPEED 50
#define ACC_DEC 4
uint8_t step = 0;
int8_t speed_cnt;

// Interval TimerA Interrupt
void Tmr0CmAIntFunc(void)
{
	if((it_cnt >= 10) && (it_1000ms_flag == 0))
	{
		it_cnt = 0;
		it_1000ms_flag = 1;

		led0_state = 1;
		R_PG_IO_PORT_Write_PA0(led0_state);
	}
	else if((it_cnt < 10) && (it_1000ms_flag == 0))
	{
		it_cnt++;
	}

	it_100ms_flag = 1;
}

// Interval TimerB Interrupt
void Tmr0CmBIntFunc(void)
{
	led0_state = 0;
	R_PG_IO_PORT_Write_PA0(led0_state);
}

// Encoder Counter OverFlow
void Mtu1OvIntFunc(void)
{
	over_val++;
}

// Encoder Counter UnderFlow
void Mtu1UnIntFunc(void)
{
	over_val--;
}

void Mtu3IcCmAIntFunc(void)
{
}

// PWM Compare match B(CW)
void Mtu3IcCmBIntFunc(void)
{
	uint16_t val;

	if(speed_cnt > 0)
	{
		val = MAX_COUNT * speed_cnt / 100;
//		val = END_COUNT - val;
		R_PG_Timer_SetTGR_B_MTU_U0_C3(val);
	}
	else if(speed_cnt == 0)
	{
		R_PG_Timer_SetTGR_B_MTU_U0_C3(STP_COUNT);
	}
}

void Mtu3IcCmCIntFunc(void)
{
}

// PWM Compare match D(CCW)
void Mtu3IcCmDIntFunc(void)
{
	uint16_t val;

	if(speed_cnt < 0)
	{
		val = MAX_COUNT * (speed_cnt * (-1)) / 100;
//		val = END_COUNT - val;
		R_PG_Timer_SetTGR_D_MTU_U0_C3(val);
	}
	else if(speed_cnt == 0)
	{
		R_PG_Timer_SetTGR_D_MTU_U0_C3(STP_COUNT);
	}
}

void Mtu3OvIntFunc(void)
{
}

void main(void)
{
	it_cnt = 0;
	it_100ms_flag = 0;
	it_1000ms_flag = 0;
	led0_state = 0;
	led1_state = 0;
	led2_state = 0;
	over_val = 0;
	encode_val = 0;
	speed_cnt = 0;

	// System CLOCK Setting
	bool a = R_PG_Clock_Set();

	// Interval timer Start
	a = R_PG_Timer_Start_TMR_U0();

	// LEDs,SWITCH port setting
	a = R_PG_IO_PORT_Set_PA();

	// XBEE REST port setting
	xbee_reset = 1;
	R_PG_IO_PORT_Write_P51(xbee_reset);

	// XBEE UART setting
	a = R_PG_SCI_Set_C2();
	memcpy(buf, "RX63N START!\r\n", 13);
	R_PG_SCI_SendAllData_C2(buf, 13);

	//位相計数モード
	a = R_PG_Timer_Set_MTU_U0_C1();
	R_PG_Timer_SetCounterValue_MTU_U0_C1(0);
	a = R_PG_Timer_StartCount_MTU_U0_C1();

	//PWM
	a = R_PG_Timer_Set_MTU_U0_C3();
	R_PG_Timer_SetTGR_B_MTU_U0_C3(STP_COUNT);
	R_PG_Timer_SetTGR_D_MTU_U0_C3(STP_COUNT);
	R_PG_Timer_StartCount_MTU_U0_C3(); //PWM START
//	R_PG_Timer_HaltCount_MTU_U0_C3();  //PWM STOP

	while(1)
	{
		if(it_100ms_flag == 1)
		{
			switch(step)
			{
			case 0: //STOP
				if(speed_cnt == 0)
				{
					R_PG_Timer_HaltCount_MTU_U0_C3(); //PWM STOP
				}
				else if(speed_cnt > 0)
	    		{
					speed_cnt -= ACC_DEC;
					if(speed_cnt < 0)
					{
						speed_cnt = 0;
					}
	    		}
				else if(speed_cnt < 0)
				{
					speed_cnt += ACC_DEC;
					if(speed_cnt > 0)
					{
						speed_cnt = 0;
					}
				}
				break;
			case 1: //CW
				if(speed_cnt == 0)
				{
					speed_cnt += ACC_DEC;
					R_PG_Timer_StartCount_MTU_U0_C3(); //PWM START
				}
				else if((speed_cnt > 0) || (speed_cnt < MAX_SPEED))
				{
					speed_cnt += ACC_DEC;
					if(speed_cnt > MAX_SPEED)
					{
						speed_cnt = MAX_SPEED;
					}
				}
				break;
			case 2: // DEC
				if(speed_cnt == 0)
				{
//					R_PG_Timer_HaltCount_MTU_U0_C3(); //PWM STOP
					step = 3;
				}
				else if(speed_cnt > 0)
	    		{
					speed_cnt -= ACC_DEC;
					if(speed_cnt < 0)
					{
						speed_cnt = 0;
					}
	    		}
				break;
			case 3: //STOP
				if(speed_cnt == 0)
				{
					R_PG_Timer_HaltCount_MTU_U0_C3(); //PWM STOP
				}
				else if(speed_cnt > 0)
	    		{
					speed_cnt -= ACC_DEC;
					if(speed_cnt < 0)
					{
						speed_cnt = 0;
					}
	    		}
				else if(speed_cnt < 0)
				{
					speed_cnt += ACC_DEC;
					if(speed_cnt > 0)
					{
						speed_cnt = 0;
					}
				}
				break;
			case 4: //CCW
				if(speed_cnt == 0)
				{
					speed_cnt -= ACC_DEC;
					R_PG_Timer_StartCount_MTU_U0_C3(); //PWM START
				}
				else if((speed_cnt > -MAX_SPEED) || (speed_cnt < 0))
				{
					speed_cnt -= ACC_DEC;
    	    		if(speed_cnt < -MAX_SPEED)
    	    		{
    	    			speed_cnt = -MAX_SPEED;
    	    		}
				}
				break;
	    	case 5: // DEC
	    		if(speed_cnt == 0)
	    		{
//	    			R_PG_Timer_HaltCount_MTU_U0_C3(); //PWM STOP
	    			step = 0;
	    		}
	    		else if(speed_cnt < 0)
	    		{
	    			speed_cnt += ACC_DEC;
    	    		if(speed_cnt > 0)
    	    		{
    	    			speed_cnt = 0;
    	    		}
	    		}
	    		break;
	    	default:
	    		break;
	    	}

			uint8_t pa7;
			a = R_PG_IO_PORT_Read_PA7(&pa7);
			if(pa7 == 0)
			{
				R_PG_IO_PORT_Write_PA6(1);
				if((speed_cnt == 0) || (speed_cnt == MAX_SPEED) || (speed_cnt == -MAX_SPEED))
				{
					step++;
					if(step > 5)
					{
						step = 0;
					}
				}
			}
			else
			{
				R_PG_IO_PORT_Write_PA6(0);
			}
			it_100ms_flag = 0;
		}

		if(it_1000ms_flag == 1)
		{
			a = R_PG_Timer_GetCounterValue_MTU_U0_C1(&cnt_val);
			encode_val = (over_val * 65535) + cnt_val;
			sprintf((char*)buf, "cnt=%+011ld\r\n", encode_val);
			R_PG_SCI_SendAllData_C2(buf, 17);

			it_1000ms_flag = 0;
		}
	}
}

#ifdef __cplusplus
void abort(void)
{

}
#endif
